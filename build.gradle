apply plugin: 'groovy'
apply plugin: 'codenarc'

def GROOVY_VERSION = '2.5.12'
def ALEXA_SDK_VERSION = '2.27.1'
def DYNAMODB_VERSION = '1.11.477'
def JUNIT_VERSION = '5.5.2'
def SPOCK_VERSION = '1.2-groovy-2.5'
def S3_MOCK_VERSION = '0.2.5'

jar {
    manifest {
        attributes 'Main-Class': 'com.triviaroyale.TriviaRoyaleStreamHandler'
    }

    from {
        sourceSets.main.runtimeClasspath
                .filter { (it.isDirectory() && it.listFiles().length > 0) || it.isFile() }
                .collect { it.isDirectory() ? it : zipTree(it) }
    }
}

codenarc {
    toolVersion = '1.4'
}

codenarcMain {
    configFile = rootProject.file('src/main/config/codenarc.groovy')
    //These values should be changed as violations are fixed.
    maxPriority2Violations = 15
    maxPriority3Violations = 15
}

codenarcTest {
    configFile = rootProject.file('src/main/config/codenarc.groovy')
    //These values should be changed as violations are fixed.
    maxPriority2Violations = 70
    maxPriority3Violations = 70
}

repositories {
    mavenCentral()
    maven {
        url 'https://repository.mulesoft.org/nexus/content/repositories/public/'
    }
}

task copyNativeDeps(type: Copy) {
    from(configurations.compile + configurations.testCompile) {
        include '*.dll'
        include '*.dylib'
        include '*.so'
    }
    into 'build/libs'
}

task buildZip(type: Zip) {
    from compileGroovy
    from processResources
    into('lib') {
        from configurations.runtimeClasspath
    }
}

test {
    dependsOn copyNativeDeps
    systemProperty 'java.library.path', 'build/libs'
}

dependencies {
    compile "org.codehaus.groovy:groovy:$GROOVY_VERSION"
    compile "org.codehaus.groovy:groovy-json:$GROOVY_VERSION"
    compile "com.amazon.alexa:ask-sdk:$ALEXA_SDK_VERSION"
    compile 'com.amazonaws:aws-lambda-java-core:1.2.1'
    compile 'com.amazonaws:aws-lambda-java-log4j2:1.2.0'
    compile 'org.apache.logging.log4j:log4j-api:2.13.0'
    compile 'org.apache.logging.log4j:log4j-core:2.13.0'
    compile 'org.apache.logging.log4j:log4j-slf4j18-impl:2.13.0'

    testCompile "org.codehaus.groovy:groovy:$GROOVY_VERSION"
    testCompile "org.codehaus.groovy:groovy-json:$GROOVY_VERSION"
    testCompile "com.amazonaws:DynamoDBLocal:$DYNAMODB_VERSION"
    testCompile "org.junit.jupiter:junit-jupiter-api:$JUNIT_VERSION"
    testCompile "org.spockframework:spock-core:$SPOCK_VERSION"
    testCompile "io.findify:s3mock_2.12:$S3_MOCK_VERSION"
}
